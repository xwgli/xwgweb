@{
    ViewBag.Title = "WebGL 类库 - Three.js 示例1";
}

@Scripts.Render("~/three/js")

<style>
    #intro {
        width: 100%;
        height: 300px;
        line-height: 300px;
        text-align: center;
    }

    #showarea {
        position: fixed;
        top: 0;
        left: 0;
        z-index: -1;
    }
</style>

<h2 class="page-header"> WebGL 类库 - Three.js 示例1&nbsp;&nbsp;<small>@Html.ActionLink("返回", "ThreeJS")</small></h2>

<h2 id="intro">呃，请看背景。。</h2>

<div id="showarea">

</div>

<script>

    var camera;
    var scene;
    var renderer;

    init();
    animate();

    function init() {
        var container = $("#showarea").get(0);

        //var width = $("#showarea").width();
        //var height = $("#showarea").height();

        var width = document.documentElement.clientWidth;
        var height = document.documentElement.clientHeight;

        camera = new THREE.PerspectiveCamera(75, width / height, 1, 10000);

        scene = new THREE.Scene();

        renderer = new THREE.CanvasRenderer();
        renderer.setSize(width, height);
        renderer.setClearColorHex(0xFFFFFF, 1.0);

        container.appendChild(renderer.domElement);

        // particles

        var PI2 = Math.PI * 2;
        var material = new THREE.SpriteCanvasMaterial({
            program: function (context) {
                context.beginPath();
                context.fillStyle = Math.random() > 0.999 ?
                    'rgba(0, 0 , 0, .5)' : 'rgba(0, 0 ,0 ,.08)';
                context.arc(0, 0, 0.5, 0, PI2);
                context.fill();
            }
        });

        var geometry = new THREE.Geometry();

        for (var i = 0; i < 500; i++) {
            var particle = new THREE.Sprite(material);
            particle.position.x = Math.random() * 2 - 1;
            particle.position.y = Math.random() * 2 - 1;
            particle.position.z = Math.random() * 2 - 1;
            particle.position.normalize(); // ?
            particle.position.multiplyScalar(Math.random() * 10 + 450);
            particle.scale.x = particle.scale.y = 10; // z?
            scene.add(particle);
            geometry.vertices.push(particle.position); // ?
        }

        // lines
        var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0xdddddd, opacity: 0.5 }));
        scene.add(line);

        window.addEventListener('resize', onWindowResize);
    }

    function onWindowResize() {
        var width = document.documentElement.clientWidth;
        var height = document.documentElement.clientHeight;

        camera.aspect = width / height;
        camera.updateProjectionMatrix();
        renderer.setSize(width, height);
    }

    function animate() {
        requestAnimationFrame(animate);

        camera.position.x = Math.sin(new Date().getTime() / 50000) * 500;
        camera.position.z = Math.cos(new Date().getTime() / 50000) * 500;
        camera.lookAt(new THREE.Vector3(0, 100, 0));
        renderer.render(scene, camera);
    }
</script>